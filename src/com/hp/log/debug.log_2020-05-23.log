2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @5cb9f472
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 11680 (auto-detected)
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 11:28:28 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 11:28:29 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 11:28:35 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 8260 (auto-detected)
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 11:28:36 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 13608 (auto-detected)
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 11:35:38 上午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 11:35:39 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 11:36:43 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 11:36:43 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 11:36:43 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@639616b3
2020-05-23 11:36:43 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 11:36:43 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 11:36:43 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 11:36:43 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 11:58:30 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 13648 (auto-detected)
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 11:58:31 上午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 11:58:42 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 11:58:42 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 11:58:42 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1a2d04ce
2020-05-23 11:58:42 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 11:58:42 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 11:58:42 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 11:58:42 上午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 11:58:56 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 11:58:57 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 11:58:57 上午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 12:54:59 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 12:55:14 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 12:55:14 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 12260 (auto-detected)
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 12:55:15 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 12:55:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 12:55:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 12:55:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5d404768
2020-05-23 12:55:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 12:55:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 12:55:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 12:55:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 12:55:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 12:56:42 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:06:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 14080 (auto-detected)
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:06:05 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:06:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 13:06:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 13:06:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3c562b2a
2020-05-23 13:06:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 13:06:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 13:06:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 13:06:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:06:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:06:25 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 13:06:25 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 13:06:25 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:06:25 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:06:25 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:06:25 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 13:06:25 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:06:25 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:06:25 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 13:06:25 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 13:06:25 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 13:08:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 13:08:28 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 1435884241.
2020-05-23 13:08:28 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5595dad1]
2020-05-23 13:08:28 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 13:08:28 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 13:08:28 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 13:09:05 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 13:09:05 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 9204 (auto-detected)
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:09:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:09:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:09:22 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 13:09:22 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 13:09:22 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3c562b2a
2020-05-23 13:09:22 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 13:09:22 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 13:09:22 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 13:09:22 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 13:09:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 13:09:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:09:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:09:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:09:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 13:09:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:09:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:09:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 13:09:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 13:09:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 13:09:50 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 13:09:51 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 23518154.
2020-05-23 13:09:51 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@166dbca]
2020-05-23 13:09:51 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 13:09:51 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 13:09:52 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 13:09:57 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 13:09:57 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:10:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 4368 (auto-detected)
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:10:06 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 8260 (auto-detected)
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:10:15 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:10:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:10:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:10:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:10:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 13:10:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 13:10:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@356c04be
2020-05-23 13:10:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 13:10:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 13:10:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 13:10:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 653654804.
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@26f5fb14]
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 13:10:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 13:11:12 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:11:12 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:11:12 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:11:12 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:11:12 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:11:12 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 10276 (auto-detected)
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:11:13 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@426c3095
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 51363755.
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@30fbfab]
2020-05-23 13:11:47 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 13:11:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 13:11:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 13:11:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 13:11:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 2628 (auto-detected)
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:29:45 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:29:46 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@753609b3
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 13:29:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 11588 (auto-detected)
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:35:10 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:35:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:35:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 13:35:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 13:35:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@426c3095
2020-05-23 13:35:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 13:35:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 13:35:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 13:35:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 13:35:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 13:36:05 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:36:05 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 11196 (auto-detected)
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:36:06 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:36:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 13:36:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 13:36:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@53b13bb6
2020-05-23 13:36:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 13:36:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 13:36:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 13:36:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 13:36:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 13:38:25 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:38:25 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 7784 (auto-detected)
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:38:26 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:38:27 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:38:31 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 13:38:31 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 13:38:31 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3c562b2a
2020-05-23 13:38:31 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 13:38:31 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 13:38:31 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 13:38:31 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 13:38:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 13:46:36 下午 [Thread: nioEventLoopGroup-3-3][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 13:46:36 下午 [Thread: nioEventLoopGroup-3-3][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 1481576023.
2020-05-23 13:46:36 下午 [Thread: nioEventLoopGroup-3-3][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@584f0e57]
2020-05-23 13:46:36 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 13:46:37 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 13:46:37 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 13:46:37 下午 [Thread: nioEventLoopGroup-3-3][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 13:46:37 下午 [Thread: nioEventLoopGroup-3-3][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 13640 (auto-detected)
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:47:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:47:06 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:47:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 13:47:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 13:47:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@11aca96a
2020-05-23 13:47:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 13:47:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 13:47:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 13:47:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:47:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:47:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 13:47:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 13:47:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 13:47:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:47:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 13:47:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 13:47:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:47:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 13:47:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 13:47:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 13:47:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 13:49:06 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 13:52:55 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:52:55 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:52:55 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:52:55 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:52:55 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:52:55 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:52:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:52:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 6164 (auto-detected)
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:52:56 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:53:34 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:53:34 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 6472 (auto-detected)
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:53:35 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:53:58 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 13:53:58 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 13:53:58 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@303a0ec4
2020-05-23 13:53:58 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 13:53:58 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 13:53:58 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 13:53:58 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 13848 (auto-detected)
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:56:34 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:51)
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 13:57:35 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 13588 (auto-detected)
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 13:57:36 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 13:58:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 13:58:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 13:58:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@53b13bb6
2020-05-23 13:58:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 13:58:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 13:58:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 13:58:26 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 1684 (auto-detected)
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 14:03:15 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 14:03:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 14:03:59 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 14:03:59 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 11952 (auto-detected)
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 14:04:00 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 14:11:52 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 7252 (auto-detected)
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 14:11:53 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 14:13:06 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 14:13:06 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 14:13:06 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7dfba1e9
2020-05-23 14:13:06 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 14:13:06 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 14:13:06 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 14:13:06 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 14:13:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 3028 (auto-detected)
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 14:13:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 14:13:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 8924 (auto-detected)
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 14:13:31 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 14:20:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 4216 (auto-detected)
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 14:20:04 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 14:20:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 14:20:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 14:20:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7779fb85
2020-05-23 14:20:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 14:20:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 14:20:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 14:20:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 14:20:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 14:28:34 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 1272 (auto-detected)
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 14:28:35 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 14:28:50 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 14:28:50 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 14:28:50 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5d404768
2020-05-23 14:28:50 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 14:28:50 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 14:28:50 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 14:28:50 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 14:29:02 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 12588 (auto-detected)
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 14:42:31 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 14:42:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 14:42:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 14:42:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@674baf50
2020-05-23 14:42:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 14:42:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 14:42:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 14:42:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 14:42:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 14:43:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 14:43:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 1638113853.
2020-05-23 14:43:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@61a3a23d]
2020-05-23 14:43:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 14:43:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 14:43:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 14:44:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: update userinfo set userName = ?,password = ?,email = ?,phoneNumber = ?,LogState = ?,City = ?,image_head = ? where id = ? 
2020-05-23 14:44:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String), 11(String), 962073795@qq.com(String), 11(String), N(String), 重庆 巫山(String), C:/users/JasonHu/PycharmProjects/untitled/picture/胡宗超/2020-05-21-10-20-02.jpg(String), 1(Integer)
2020-05-23 14:44:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 14:44:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 14:44:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 14:45:16 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 14:45:16 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 14:45:16 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 14:45:16 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: update userinfo set userName = ?,password = ?,email = ?,phoneNumber = ?,LogState = ?,City = ?,image_head = ? where id = ? 
2020-05-23 14:45:16 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String), 11(String), 962073795@qq.com(String), 11(String), N(String), 重庆 巫山(String), C:/users/JasonHu/PycharmProjects/untitled/picture/胡宗超/2020-05-21-10-20-02.jpg(String), 1(Integer)
2020-05-23 14:45:16 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 14:47:34 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 14:47:34 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: (String)
2020-05-23 14:47:34 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 14:47:38 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 14:47:38 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 14:47:38 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 14:47:38 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 2040 (auto-detected)
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 14:47:39 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 14:49:38 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 14:49:38 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 2708 (auto-detected)
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 14:49:39 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2da32dc5
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 14:49:48 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 14:49:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 14:49:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 1195062391.
2020-05-23 14:49:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@473b3477]
2020-05-23 14:49:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 14:49:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 14:49:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 14:49:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 14:49:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 13500 (auto-detected)
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 14:50:00 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 14:50:01 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5ca84519
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 14:50:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 14:50:11 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 14:50:11 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 1788152835.
2020-05-23 14:50:11 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6a950c03]
2020-05-23 14:50:11 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 14:50:11 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 14:50:11 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 14:50:11 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 14:50:11 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 14:50:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 14:50:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: (String)
2020-05-23 14:50:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 14:56:01 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 14:56:01 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 大哥9(String)
2020-05-23 14:56:01 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 14:56:01 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 14:56:01 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 大哥9(String)
2020-05-23 14:56:01 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 14:57:08 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: update userinfo set userName = ?,password = ?,email = ?,phoneNumber = ?,LogState = ?,City = ?,image_head = ? where id = ? 
2020-05-23 14:57:08 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 大哥9(String), hzc(String), 962073795@qq.com(String), 18315086184(String), N(String), 重庆(String), C:/users/JasonHu/PycharmProjects/untitled/picture/大哥9/2019-12-13-21-57-17.jpg(String), 2(Integer)
2020-05-23 14:57:08 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 14:57:08 下午 [Thread: nioEventLoopGroup-3-5][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.commit(JdbcTransaction.java:69) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6a950c03]
2020-05-23 14:57:34 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 14:57:34 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 大哥9(String)
2020-05-23 14:57:34 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 14:57:34 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: update userinfo set userName = ?,password = ?,email = ?,phoneNumber = ?,LogState = ?,City = ?,image_head = ? where id = ? 
2020-05-23 14:57:34 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 大哥9(String), hzc(String), 962073795@qq.com(String), 18315086184(String), N(String), 重庆 巫山(String), C:/users/JasonHu/PycharmProjects/untitled/picture/大哥9/2019-12-13-21-57-17.jpg(String), 2(Integer)
2020-05-23 14:57:34 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 14:57:34 下午 [Thread: nioEventLoopGroup-3-6][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.commit(JdbcTransaction.java:69) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6a950c03]
2020-05-23 14:59:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 14:59:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 大哥9(String)
2020-05-23 14:59:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 14:59:26 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 14:59:26 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 14:59:26 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 14:59:27 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 14:59:27 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 14:59:27 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 2
2020-05-23 15:01:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 15:01:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 15:01:18 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 15:01:18 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 15:01:18 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 15:01:18 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1677d1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 15:04:19 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 14248 (auto-detected)
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 15:04:20 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 15:04:30 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 15:04:30 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 15:04:30 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@37d6efd2
2020-05-23 15:04:30 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 15:04:30 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 15:04:30 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 15:04:30 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 15:04:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 15:04:55 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 15:04:56 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 124107207.
2020-05-23 15:04:56 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@765b9c7]
2020-05-23 15:04:56 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 15:04:56 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 15:04:57 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 15:05:46 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 15:05:46 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 15:06:41 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 15:06:41 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 15:06:41 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6e1567f1
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 15:07:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 11508 (auto-detected)
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 15:07:31 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@666ec4d4
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-2][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-2][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-2][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-2][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:07:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 622499526.
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@251a96c6]
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-2][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 15:07:35 下午 [Thread: nioEventLoopGroup-3-2][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 15:08:10 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 15:08:10 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 大哥9(String)
2020-05-23 15:08:10 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 15:08:11 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 15:08:11 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 大哥9(String)
2020-05-23 15:08:11 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @cb644e
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 15:16:09 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 1552 (auto-detected)
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 15:16:10 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @cb644e
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 15:16:28 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 10156 (auto-detected)
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 15:16:29 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 15:16:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 15:16:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 15:16:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@753609b3
2020-05-23 15:16:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 15:16:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 15:16:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 15:16:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 15:16:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 1177538680.
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@462fd078]
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 15:16:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 15:17:08 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 15:17:08 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 15:17:08 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @cb644e
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 3440 (auto-detected)
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 15:33:53 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@426c3095
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:34:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 11150156.
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@aa234c]
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 15:34:10 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 15:41:21 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 15:41:21 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @cb644e
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 10492 (auto-detected)
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 15:41:22 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7779fb85
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 15:41:33 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 15:41:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 170754006.
2020-05-23 15:41:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@a2d7fd6]
2020-05-23 15:41:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 15:41:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 15:41:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 15:41:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 15:41:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 15:43:27 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 15:43:27 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 15:43:27 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3159c4b8
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 1524 (auto-detected)
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 16:07:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3159c4b8
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 12052 (auto-detected)
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 16:07:53 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 16:07:54 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3159c4b8
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 5556 (auto-detected)
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 16:09:48 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3159c4b8
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 16:14:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 5856 (auto-detected)
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 16:14:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3159c4b8
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 16:16:10 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 13992 (auto-detected)
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 16:16:11 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 16:20:53 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 16:20:53 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @778d1062
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 6488 (auto-detected)
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 16:20:54 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3159c4b8
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 16:24:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 12692 (auto-detected)
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 16:24:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3159c4b8
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 16:25:22 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 10856 (auto-detected)
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 16:25:23 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 16:31:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 16:31:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 16:31:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2da32dc5
2020-05-23 16:31:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 16:31:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 16:31:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 16:31:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl' adapter.
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 16:31:52 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Opening JDBC Connection
2020-05-23 16:31:53 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Created connection 436149084.
2020-05-23 16:31:53 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@19ff1b5c]
2020-05-23 16:31:53 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 16:31:53 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 16:31:53 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 1
2020-05-23 16:31:53 下午 [Thread: nioEventLoopGroup-3-4][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 16:31:53 下午 [Thread: nioEventLoopGroup-3-4][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 16:32:43 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 16:32:43 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 胡宗(String)
2020-05-23 16:32:43 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 0
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @778d1062
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 952 (auto-detected)
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 16:36:28 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 16:36:29 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 16:36:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 16:36:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 16:36:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@674baf50
2020-05-23 16:36:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 16:36:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 16:36:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 16:36:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl' adapter.
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Opening JDBC Connection
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Created connection 792800506.
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2f412cfa]
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 16:36:49 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 1
2020-05-23 16:37:05 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 16:37:05 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3159c4b8
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 16:49:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 1408 (auto-detected)
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 16:49:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1e6153e5
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl' adapter.
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 16:49:37 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Opening JDBC Connection
2020-05-23 16:49:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Created connection 1329470470.
2020-05-23 16:49:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4f3e1c06]
2020-05-23 16:49:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 16:49:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 16:49:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 1
2020-05-23 16:49:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 16:49:38 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 16:53:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 16:53:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 16:53:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 1
2020-05-23 17:12:11 下午 [Thread: nioEventLoopGroup-3-7][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 17:12:11 下午 [Thread: nioEventLoopGroup-3-7][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 大哥9(String)
2020-05-23 17:12:11 下午 [Thread: nioEventLoopGroup-3-7][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 1
2020-05-23 17:17:14 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 17:17:14 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 17:17:14 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 2
2020-05-23 17:19:20 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 17:19:20 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 17:19:20 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 0
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @3159c4b8
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 10232 (auto-detected)
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 17:20:55 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 17:20:56 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 17:21:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 17:21:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 17:21:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7779fb85
2020-05-23 17:21:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 17:21:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 17:21:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 17:21:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl' adapter.
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Opening JDBC Connection
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Created connection 765957693.
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2da7963d]
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 1
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 毛老师(String)
2020-05-23 17:21:40 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 0
2020-05-23 17:25:09 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 17:25:09 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 17:25:09 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 1
2020-05-23 17:25:09 下午 [Thread: nioEventLoopGroup-3-7][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 17:25:09 下午 [Thread: nioEventLoopGroup-3-7][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 17:25:09 下午 [Thread: nioEventLoopGroup-3-7][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 2
2020-05-23 17:25:51 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 17:25:51 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 大哥9(String)
2020-05-23 17:25:51 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 1
2020-05-23 17:32:48 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: update userinfo set userName = ?,password = ?,email = ?,phoneNumber = ?,LogState = ?,City = ?,image_head = ? where id = ? 
2020-05-23 17:32:48 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 胡宗超(String), 111(String), 962073795@qq.com(String), 11(String), N(String), 巫山(String), C:/users/JasonHu/PycharmProjects/untitled/picture/胡宗超/2020-05-21-10-20-02.jpg(String), 1(Integer)
2020-05-23 17:32:48 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.updateUserInfo >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==    Updates: 1
2020-05-23 17:32:48 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2da7963d]
2020-05-23 17:33:11 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 17:33:11 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 大哥9(String)
2020-05-23 17:33:11 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 1
2020-05-23 17:33:11 下午 [Thread: nioEventLoopGroup-3-7][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from friendlist where user= ? 
2020-05-23 17:33:11 下午 [Thread: nioEventLoopGroup-3-7][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 大哥9(String)
2020-05-23 17:33:11 下午 [Thread: nioEventLoopGroup-3-7][ Class:com.huzong.mybatis.dao.IFriendDao.findFriendByUser >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 0
2020-05-23 17:57:07 下午 [Thread: nioEventLoopGroup-3-8][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 17:57:07 下午 [Thread: nioEventLoopGroup-3-8][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 17:57:07 下午 [Thread: nioEventLoopGroup-3-8][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:54) ]
DEBUG:<==      Total: 1
2020-05-23 17:58:27 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.reportTracedLeak(ResourceLeakDetector.java:310) ]
ERROR:LEAK: ByteBuf.release() was not called before it's garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.
Recent access records: 
Created at:
	io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:349)
	io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:187)
	io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:178)
	io.netty.buffer.CompositeByteBuf.allocBuffer(CompositeByteBuf.java:1835)
	io.netty.buffer.CompositeByteBuf.copy(CompositeByteBuf.java:1487)
	io.netty.buffer.AbstractByteBuf.copy(AbstractByteBuf.java:1195)
	io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.offer(HttpPostStandardRequestDecoder.java:288)
	io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.<init>(HttpPostStandardRequestDecoder.java:156)
	io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.<init>(HttpPostRequestDecoder.java:95)
	io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.<init>(HttpPostRequestDecoder.java:53)
	com.huzong.serlet.MyServlet.parse_form(MyServlet.java:241)
	com.huzong.serlet.MyServlet.get_user_info(MyServlet.java:173)
	com.huzong.serlet.MyServlet.doPost(MyServlet.java:127)
	com.huzong.server.HttpFileHandler.channelRead0(HttpFileHandler.java:36)
	com.huzong.server.HttpFileHandler.channelRead0(HttpFileHandler.java:18)
	io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:316)
	io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
	io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	java.base/java.lang.Thread.run(Thread.java:832)
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @161479c6
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 4956 (auto-detected)
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 19:57:21 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@37d6efd2
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 19:57:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 19:57:30 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 19:57:30 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 19:58:14 下午 [Thread: nioEventLoopGroup-3-2][ Class:io.netty.handler.codec.http.HttpObjectAggregator >> Method: io.netty.handler.codec.http.HttpObjectAggregator$2.operationComplete(HttpObjectAggregator.java:268) ]
DEBUG:Failed to send a 413 Request Entity Too Large.
java.lang.UnsupportedOperationException: unsupported message type: DefaultFullHttpResponse (expected: ByteBuf, FileRegion)
	at io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage(AbstractNioByteChannel.java:283)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.write(AbstractChannel.java:873)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.write(DefaultChannelPipeline.java:1367)
	at io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:715)
	at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:762)
	at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:788)
	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:756)
	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:806)
	at io.netty.handler.codec.http.HttpObjectAggregator.handleOversizedMessage(HttpObjectAggregator.java:264)
	at io.netty.handler.codec.http.HttpObjectAggregator.handleOversizedMessage(HttpObjectAggregator.java:87)
	at io.netty.handler.codec.MessageAggregator.invokeHandleOversizedMessage(MessageAggregator.java:404)
	at io.netty.handler.codec.MessageAggregator.decode(MessageAggregator.java:254)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:316)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:303)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:417)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:271)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-05-23 20:06:12 下午 [Thread: nioEventLoopGroup-3-4][ Class:io.netty.handler.codec.http.HttpObjectAggregator >> Method: io.netty.handler.codec.http.HttpObjectAggregator$2.operationComplete(HttpObjectAggregator.java:268) ]
DEBUG:Failed to send a 413 Request Entity Too Large.
java.lang.UnsupportedOperationException: unsupported message type: DefaultFullHttpResponse (expected: ByteBuf, FileRegion)
	at io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage(AbstractNioByteChannel.java:283)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.write(AbstractChannel.java:873)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.write(DefaultChannelPipeline.java:1367)
	at io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:715)
	at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:762)
	at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:788)
	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:756)
	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:806)
	at io.netty.handler.codec.http.HttpObjectAggregator.handleOversizedMessage(HttpObjectAggregator.java:264)
	at io.netty.handler.codec.http.HttpObjectAggregator.handleOversizedMessage(HttpObjectAggregator.java:87)
	at io.netty.handler.codec.MessageAggregator.invokeHandleOversizedMessage(MessageAggregator.java:404)
	at io.netty.handler.codec.MessageAggregator.decode(MessageAggregator.java:254)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:316)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:303)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:417)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:271)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @161479c6
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 20:11:15 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 8820 (auto-detected)
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 20:11:16 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 20:11:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 20:11:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 20:11:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@674baf50
2020-05-23 20:11:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 20:11:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 20:11:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 20:11:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 20:11:24 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.http.HttpObjectAggregator >> Method: io.netty.handler.codec.http.HttpObjectAggregator$2.operationComplete(HttpObjectAggregator.java:268) ]
DEBUG:Failed to send a 413 Request Entity Too Large.
java.lang.UnsupportedOperationException: unsupported message type: DefaultFullHttpResponse (expected: ByteBuf, FileRegion)
	at io.netty.channel.nio.AbstractNioByteChannel.filterOutboundMessage(AbstractNioByteChannel.java:283)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.write(AbstractChannel.java:873)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.write(DefaultChannelPipeline.java:1367)
	at io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:715)
	at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:762)
	at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:788)
	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:756)
	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:806)
	at io.netty.handler.codec.http.HttpObjectAggregator.handleOversizedMessage(HttpObjectAggregator.java:264)
	at io.netty.handler.codec.http.HttpObjectAggregator.handleOversizedMessage(HttpObjectAggregator.java:87)
	at io.netty.handler.codec.MessageAggregator.invokeHandleOversizedMessage(MessageAggregator.java:404)
	at io.netty.handler.codec.MessageAggregator.decode(MessageAggregator.java:254)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:316)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:303)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:417)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:271)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:832)
2020-05-23 20:16:43 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 20:16:43 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 20:16:43 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 20:16:43 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 20:16:43 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 20:16:43 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1ed4004b
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 2624 (auto-detected)
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 20:16:44 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 20:16:53 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 20:16:53 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 20:16:53 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2a040735
2020-05-23 20:16:53 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 20:16:53 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 20:16:53 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 20:16:53 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 20:16:54 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75329a49
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 10148 (auto-detected)
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 20:18:26 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 20:18:36 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 20:18:36 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 20:18:36 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2c5dc14a
2020-05-23 20:18:36 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 20:18:36 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 20:18:36 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 20:18:36 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 20:18:41 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 20:45:04 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 20:45:04 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 20:45:04 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 20:45:04 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 20:45:04 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 20:45:04 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75329a49
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 1740 (auto-detected)
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 20:45:05 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 20:45:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 20:45:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 20:45:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@37d6efd2
2020-05-23 20:45:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 20:45:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 20:45:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 20:45:23 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 20:45:29 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75329a49
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 20:47:48 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 8660 (auto-detected)
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 20:47:49 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 20:47:59 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 20:47:59 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 20:47:59 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1a2d04ce
2020-05-23 20:47:59 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 20:47:59 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 20:47:59 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 20:47:59 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 20:48:03 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 20:50:59 下午 [Thread: nioEventLoopGroup-3-2][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 20:50:59 下午 [Thread: nioEventLoopGroup-3-2][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 20:53:42 下午 [Thread: main][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 20:54:17 下午 [Thread: main][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:55:27 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:55:28 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 20:55:28 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 20:55:28 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 20:55:28 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:55:28 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 20:55:28 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 20:55:28 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:55:28 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 20:55:28 下午 [Thread: main][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 20:55:28 下午 [Thread: main][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 20:55:28 下午 [Thread: main][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75329a49
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 10228 (auto-detected)
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 21:01:59 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 21:02:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 21:02:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 21:02:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1a2d04ce
2020-05-23 21:02:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 21:02:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 21:02:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 21:02:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 21:02:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75329a49
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 13660 (auto-detected)
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 21:11:30 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 21:11:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 21:11:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 21:11:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@53b13bb6
2020-05-23 21:11:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 21:11:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 21:11:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 21:11:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 21:11:39 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75329a49
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 21:12:29 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 5884 (auto-detected)
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 21:12:30 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 21:12:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 21:12:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 21:12:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@674baf50
2020-05-23 21:12:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 21:12:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 21:12:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 21:12:32 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 21:12:34 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 21:13:12 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 21:13:12 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75329a49
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 12940 (auto-detected)
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 21:13:13 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 21:13:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 21:13:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 21:13:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1a2d04ce
2020-05-23 21:13:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 21:13:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 21:13:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 21:13:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 21:13:17 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1ed4004b
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 12836 (auto-detected)
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 21:19:03 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 21:19:20 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 21:19:20 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 21:19:20 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2fa9ea2a
2020-05-23 21:19:20 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 21:19:20 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 21:19:20 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 21:19:20 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 21:19:21 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1ed4004b
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 5064 (auto-detected)
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 21:23:43 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 21:24:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 21:24:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 21:24:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@426c3095
2020-05-23 21:24:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 21:24:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 21:24:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 21:24:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 21:24:19 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:27:24 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1ed4004b
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 76 (auto-detected)
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 21:27:25 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 21:27:42 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 21:27:42 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 21:27:42 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@2a040735
2020-05-23 21:27:42 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 21:27:42 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 21:27:42 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 21:27:42 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 21:27:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 21:27:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 21:27:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 21:30:40 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 21:30:40 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 1935530676.
2020-05-23 21:30:40 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@735ddab4]
2020-05-23 21:30:40 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 21:30:40 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: test(String)
2020-05-23 21:30:40 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @161479c6
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 21:32:04 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 5972 (auto-detected)
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 21:32:05 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 21:32:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 21:32:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 21:32:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@37d6efd2
2020-05-23 21:32:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 21:32:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 21:32:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 21:32:43 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 21:32:44 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 21:32:46 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 21:32:46 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 21:33:42 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 21:33:42 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 1437621181.
2020-05-23 21:33:42 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@55b05bbd]
2020-05-23 21:33:42 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 21:33:42 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: tt(String)
2020-05-23 21:33:42 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 21:36:51 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 21:36:51 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: rr(String)
2020-05-23 21:36:51 下午 [Thread: nioEventLoopGroup-3-5][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75329a49
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 21:39:37 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 13348 (auto-detected)
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 21:39:38 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 21:40:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 21:40:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 21:40:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@674baf50
2020-05-23 21:40:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 21:40:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 21:40:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 21:40:08 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 21:40:09 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 21:40:11 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 21:40:11 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 21:40:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 21:40:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 1040756998.
2020-05-23 21:40:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@3e08b106]
2020-05-23 21:40:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 21:40:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 哈哈(String)
2020-05-23 21:40:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 21:41:09 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(?,?,?,?,?,?,?) 
2020-05-23 21:41:09 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 哈哈(String), gh(String), 962073795@qq.com(String), 11(String), N(String), 计算机(String), (String)
2020-05-23 21:41:09 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 21:41:12 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.commit(JdbcTransaction.java:69) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@3e08b106]
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75329a49
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 7480 (auto-detected)
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 21:48:46 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 21:48:47 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 21:49:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 21:49:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 21:49:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@411ed57d
2020-05-23 21:49:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 21:49:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 21:49:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 21:49:12 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 21:49:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 21:49:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 21:49:15 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 21:49:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 21:49:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 326190277.
2020-05-23 21:49:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@137144c5]
2020-05-23 21:49:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 21:49:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 11(String)
2020-05-23 21:49:56 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 21:50:18 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(?,?,?,?,?,?,?) 
2020-05-23 21:50:18 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 11(String), 44(String), 962073795@qq.com(String), 17723947489(String), N(String), 11(String), (String)
2020-05-23 21:50:18 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 21:50:38 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.commit(JdbcTransaction.java:69) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@137144c5]
2020-05-23 21:57:40 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 21:57:40 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: dede(String)
2020-05-23 21:57:40 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 21:58:08 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(?,?,?,?,?,?,?) 
2020-05-23 21:58:08 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: dede(String), 123(String), 962073795@qq.com(String), 11(String), N(String), 重庆(String), (String)
2020-05-23 21:58:08 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 21:58:08 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.commit(JdbcTransaction.java:69) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@137144c5]
2020-05-23 22:00:44 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 22:00:44 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: sd(String)
2020-05-23 22:00:44 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 22:00:53 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(?,?,?,?,?,?,?) 
2020-05-23 22:00:53 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: sd(String), we(String), 962073795@qq.com(String), 11(String), N(String), wh(String), (String)
2020-05-23 22:00:53 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 22:00:53 下午 [Thread: nioEventLoopGroup-3-6][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.commit(JdbcTransaction.java:69) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@137144c5]
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.logging.InternalLoggerFactory >> Method: io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:53) ]
DEBUG:Using Log4J as the default logging framework
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.channel.MultithreadEventLoopGroup >> Method: io.netty.channel.MultithreadEventLoopGroup.<clinit>(MultithreadEventLoopGroup.java:44) ]
DEBUG:-Dio.netty.eventLoopThreads: 8
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:54) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.InternalThreadLocalMap >> Method: io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:57) ]
DEBUG:-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:106) ]
DEBUG:-Dio.netty.noKeySetOptimization: false
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.channel.nio.NioEventLoop >> Method: io.netty.channel.nio.NioEventLoop.<clinit>(NioEventLoop.java:107) ]
DEBUG:-Dio.netty.selectorAutoRebuildThreshold: 512
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.isWindows0(PlatformDependent.java:987) ]
DEBUG:Platform: Windows
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:396) ]
DEBUG:-Dio.netty.noUnsafe: false
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:852) ]
DEBUG:Java version: 14
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:121) ]
DEBUG:sun.misc.Unsafe.theUnsafe: available
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145) ]
DEBUG:sun.misc.Unsafe.copyMemory: available
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:183) ]
DEBUG:java.nio.Buffer.address: available
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:253) ]
DEBUG:direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)
	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:225)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:219)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:314) ]
DEBUG:java.nio.Bits.unaligned: available, true
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:373) ]
DEBUG:jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable
java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @1ed4004b
	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:376)
	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:647)
	at java.base/java.lang.reflect.Method.invoke(Method.java:556)
	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:335)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:312)
	at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:326)
	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:273)
	at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue0(NioEventLoop.java:279)
	at io.netty.channel.nio.NioEventLoop.newTaskQueue(NioEventLoop.java:150)
	at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:138)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:146)
	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:37)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:84)
	at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:58)
	at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:52)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:96)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:91)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:72)
	at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:52)
	at com.huzong.server.server.run(server.java:13)
	at com.huzong.server.server.main(server.java:50)
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent0 >> Method: io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:386) ]
DEBUG:java.nio.DirectByteBuffer.<init>(long, int): unavailable
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1030) ]
DEBUG:sun.misc.Unsafe: available
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.maxDirectMemory0(PlatformDependent.java:1130) ]
DEBUG:maxDirectMemory: 4282384384 bytes (maybe)
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1149) ]
DEBUG:-Dio.netty.tmpdir: C:\Users\JasonHu\AppData\Local\Temp (java.io.tmpdir)
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1228) ]
DEBUG:-Dio.netty.bitMode: 64 (sun.arch.data.model)
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:174) ]
DEBUG:-Dio.netty.maxDirectMemory: -1 bytes
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181) ]
DEBUG:-Dio.netty.uninitializedArrayAllocationThreshold: -1
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.CleanerJava9 >> Method: io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71) ]
DEBUG:java.nio.ByteBuffer.cleaner(): available
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:201) ]
DEBUG:-Dio.netty.noPreferDirect: false
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.internal.PlatformDependent >> Method: io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:891) ]
DEBUG:org.jctools-core.MpscChunkedArrayQueue: available
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:79) ]
DEBUG:-Dio.netty.processId: 5996 (auto-detected)
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:139) ]
DEBUG:-Djava.net.preferIPv4Stack: false
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:140) ]
DEBUG:-Djava.net.preferIPv6Addresses: false
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil.<clinit>(NetUtil.java:224) ]
DEBUG:Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.NetUtil >> Method: io.netty.util.NetUtil$1.run(NetUtil.java:289) ]
DEBUG:Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.channel.DefaultChannelId >> Method: io.netty.channel.DefaultChannelId.<clinit>(DefaultChannelId.java:101) ]
DEBUG:-Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130) ]
DEBUG:-Dio.netty.leakDetection.level: simple
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.util.ResourceLeakDetector >> Method: io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:131) ]
DEBUG:-Dio.netty.leakDetection.targetRecords: 4
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:142) ]
DEBUG:-Dio.netty.allocator.numHeapArenas: 8
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:143) ]
DEBUG:-Dio.netty.allocator.numDirectArenas: 8
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:145) ]
DEBUG:-Dio.netty.allocator.pageSize: 8192
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:150) ]
DEBUG:-Dio.netty.allocator.maxOrder: 11
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:154) ]
DEBUG:-Dio.netty.allocator.chunkSize: 16777216
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:155) ]
DEBUG:-Dio.netty.allocator.tinyCacheSize: 512
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:156) ]
DEBUG:-Dio.netty.allocator.smallCacheSize: 256
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:157) ]
DEBUG:-Dio.netty.allocator.normalCacheSize: 64
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:158) ]
DEBUG:-Dio.netty.allocator.maxCachedBufferCapacity: 32768
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:159) ]
DEBUG:-Dio.netty.allocator.cacheTrimInterval: 8192
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:160) ]
DEBUG:-Dio.netty.allocator.cacheTrimIntervalMillis: 0
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:161) ]
DEBUG:-Dio.netty.allocator.useCacheForAllThreads: true
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.PooledByteBufAllocator >> Method: io.netty.buffer.PooledByteBufAllocator.<clinit>(PooledByteBufAllocator.java:162) ]
DEBUG:-Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:86) ]
DEBUG:-Dio.netty.allocator.type: pooled
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:95) ]
DEBUG:-Dio.netty.threadLocalDirectBufferSize: 0
2020-05-23 22:08:51 下午 [Thread: main][ Class:io.netty.buffer.ByteBufUtil >> Method: io.netty.buffer.ByteBufUtil.<clinit>(ByteBufUtil.java:98) ]
DEBUG:-Dio.netty.maxThreadLocalCharBufferSize: 16384
2020-05-23 22:09:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:63) ]
DEBUG:-Dio.netty.buffer.checkAccessible: true
2020-05-23 22:09:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.buffer.AbstractByteBuf >> Method: io.netty.buffer.AbstractByteBuf.<clinit>(AbstractByteBuf.java:64) ]
DEBUG:-Dio.netty.buffer.checkBounds: true
2020-05-23 22:09:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.ResourceLeakDetectorFactory >> Method: io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:195) ]
DEBUG:Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5ca84519
2020-05-23 22:09:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:97) ]
DEBUG:-Dio.netty.recycler.maxCapacityPerThread: 4096
2020-05-23 22:09:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:98) ]
DEBUG:-Dio.netty.recycler.maxSharedCapacityFactor: 2
2020-05-23 22:09:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:99) ]
DEBUG:-Dio.netty.recycler.linkCapacity: 16
2020-05-23 22:09:13 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.util.Recycler >> Method: io.netty.util.Recycler.<clinit>(Recycler.java:100) ]
DEBUG:-Dio.netty.recycler.ratio: 8
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.logging.LogFactory >> Method: org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) ]
DEBUG:Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.forceCloseAll(PooledDataSource.java:353) ]
DEBUG:PooledDataSource forcefully closed/removed all connections.
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VFS
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.JBoss6VFS >> Method: org.apache.ibatis.io.JBoss6VFS.setInvalid(JBoss6VFS.java:142) ]
DEBUG:JBoss 6 VFS API is not available in this environment.
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS.getClass(VFS.java:108) ]
DEBUG:Class not found: org.jboss.vfs.VirtualFile
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:63) ]
DEBUG:VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment.
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.VFS >> Method: org.apache.ibatis.io.VFS$VFSHolder.createVFS(VFS.java:74) ]
DEBUG:Using VFS adapter org.apache.ibatis.io.DefaultVFS
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IFriendDao.class
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: IUserInfoDao.class
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:113) ]
DEBUG:Listing file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IFriendDao.class
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   !com/huzong/mybatis/dao/IFriendDao  java/lang/Object findFriendByUser $(Ljava/lang/String;)Ljava/util/List; 	Signature H(Ljava/lang/String;)Ljava/util/List<Lcom/huzong/mybatis/domain/Friend;>; RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Select; value ,select * from friendlist where user= #{user} 
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:222) ]
DEBUG:Find JAR URL: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.findJarForResource(DefaultVFS.java:250) ]
DEBUG:Not a JAR: file:/C:/Users/JasonHu/IdeaProjects/MyServer/target/classes/com/huzong/mybatis/dao/IUserInfoDao.class
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.DefaultVFS >> Method: org.apache.ibatis.io.DefaultVFS.list(DefaultVFS.java:102) ]
DEBUG:Reader entry: ����   :   #com/huzong/mybatis/dao/IUserInfoDao  java/lang/Object addUser '(Lcom/huzong/mybatis/domain/UserInfo;)V RuntimeVisibleAnnotations &Lorg/apache/ibatis/annotations/Insert; value �insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(#{userName},#{password},#{email},#{phoneNumber},#{LogState},#{City},#{image_head}) findUserByName 8(Ljava/lang/String;)Lcom/huzong/mybatis/domain/UserInfo; &Lorg/apache/ibatis/annotations/Select; 2select * from userinfo where userName= #{userName} updateUserInfo &Lorg/apache/ibatis/annotations/Update; �update userinfo set userName = #{userName},password = #{password},email = #{email},phoneNumber = #{phoneNumber},LogState = #{LogState},City = #{City},image_head = #{image_head} where id = #{id} 
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IFriendDao matches criteria [is assignable to Object]
2020-05-23 22:09:14 下午 [Thread: nioEventLoopGroup-3-1][ Class:org.apache.ibatis.io.ResolverUtil >> Method: org.apache.ibatis.io.ResolverUtil.addIfMatching(ResolverUtil.java:256) ]
DEBUG:Checking to see if class com.huzong.mybatis.dao.IUserInfoDao matches criteria [is assignable to Object]
2020-05-23 22:09:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:39) ]
DEBUG:-Dio.netty.noJdkZlibDecoder: false
2020-05-23 22:09:16 下午 [Thread: nioEventLoopGroup-3-1][ Class:io.netty.handler.codec.compression.ZlibCodecFactory >> Method: io.netty.handler.codec.compression.ZlibCodecFactory.<clinit>(ZlibCodecFactory.java:42) ]
DEBUG:-Dio.netty.noJdkZlibEncoder: false
2020-05-23 22:09:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.openConnection(JdbcTransaction.java:136) ]
DEBUG:Opening JDBC Connection
2020-05-23 22:09:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.datasource.pooled.PooledDataSource >> Method: org.apache.ibatis.datasource.pooled.PooledDataSource.popConnection(PooledDataSource.java:424) ]
DEBUG:Created connection 709465313.
2020-05-23 22:09:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.setDesiredAutoCommit(JdbcTransaction.java:100) ]
DEBUG:Setting autocommit to false on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2a4994e1]
2020-05-23 22:09:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 22:09:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: ww(String)
2020-05-23 22:09:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 22:09:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(?,?,?,?,?,?,?) 
2020-05-23 22:09:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: ww(String), ee(String), 962073795@qq.com(String), (String), N(String), zx(String), (String)
2020-05-23 22:09:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 22:09:37 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.commit(JdbcTransaction.java:69) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2a4994e1]
2020-05-23 22:11:30 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 22:11:30 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 胡宗超(String)
2020-05-23 22:11:30 下午 [Thread: nioEventLoopGroup-3-3][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 1
2020-05-23 22:12:31 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 22:12:31 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 带看(String)
2020-05-23 22:12:31 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 22:12:31 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(?,?,?,?,?,?,?) 
2020-05-23 22:12:31 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: 带看(String), 33(String), 962073795@qq.com(String), 440(String), N(String), 重庆(String), (String)
2020-05-23 22:12:31 下午 [Thread: nioEventLoopGroup-3-6][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 22:12:31 下午 [Thread: nioEventLoopGroup-3-6][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.commit(JdbcTransaction.java:69) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2a4994e1]
2020-05-23 22:18:25 下午 [Thread: nioEventLoopGroup-3-8][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 22:18:25 下午 [Thread: nioEventLoopGroup-3-8][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: ji(String)
2020-05-23 22:18:25 下午 [Thread: nioEventLoopGroup-3-8][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 22:18:25 下午 [Thread: nioEventLoopGroup-3-8][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(?,?,?,?,?,?,?) 
2020-05-23 22:18:25 下午 [Thread: nioEventLoopGroup-3-8][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: ji(String), gh(String), 962073795@qq.com(String), 77(String), N(String), 246(String), (String)
2020-05-23 22:18:25 下午 [Thread: nioEventLoopGroup-3-8][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 22:18:25 下午 [Thread: nioEventLoopGroup-3-8][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.commit(JdbcTransaction.java:69) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2a4994e1]
2020-05-23 22:25:15 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 22:25:15 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: uu(String)
2020-05-23 22:25:15 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 22:25:15 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(?,?,?,?,?,?,?) 
2020-05-23 22:25:15 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: uu(String), vv(String), 962073795@qq.com(String), 11(String), N(String), gh(String), (String)
2020-05-23 22:25:15 下午 [Thread: nioEventLoopGroup-3-2][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 22:25:15 下午 [Thread: nioEventLoopGroup-3-2][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.commit(JdbcTransaction.java:69) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2a4994e1]
2020-05-23 22:35:00 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: select * from userinfo where userName= ? 
2020-05-23 22:35:00 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: gg(String)
2020-05-23 22:35:00 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.findUserByName >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==      Total: 0
2020-05-23 22:35:00 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==>  Preparing: insert into userinfo(userName, password, email, phoneNumber, LogState, City, image_head) values(?,?,?,?,?,?,?) 
2020-05-23 22:35:00 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:==> Parameters: gg(String), hh(String), 962073795@qq.com(String), 11(String), N(String), ff(String), (String)
2020-05-23 22:35:00 下午 [Thread: nioEventLoopGroup-3-4][ Class:com.huzong.mybatis.dao.IUserInfoDao.addUser >> Method: org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ]
DEBUG:<==    Updates: 1
2020-05-23 22:35:00 下午 [Thread: nioEventLoopGroup-3-4][ Class:org.apache.ibatis.transaction.jdbc.JdbcTransaction >> Method: org.apache.ibatis.transaction.jdbc.JdbcTransaction.commit(JdbcTransaction.java:69) ]
DEBUG:Committing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2a4994e1]
